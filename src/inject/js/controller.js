// Generated by CoffeeScript 1.9.1
(function() {
  var EventHandler, TransmissionHandler,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  EventHandler = (function() {
    function EventHandler() {
      this.dispatch = bind(this.dispatch, this);
    }

    EventHandler.prototype.dispatch = function(action) {
      $.event.trigger({
        type: "NetflixHTPC",
        action: action
      });
      return false;
    };

    return EventHandler;

  })();

  TransmissionHandler = (function(superClass) {
    var source, target;

    extend(TransmissionHandler, superClass);

    source = 'MajorTom';

    target = 'GroundControl';

    function TransmissionHandler() {
      this._recieve = bind(this._recieve, this);
      this.transmit = bind(this.transmit, this);
      window.addEventListener('message', this._recieve);
    }

    TransmissionHandler.prototype.transmit = function(message, action) {
      return window.postMessage({
        source: this.source,
        action: action
      }, '*');
    };

    TransmissionHandler.prototype._recieve = function(event) {
      if (event.data.source === this.target) {
        console.log(event);
        return this.dispatch(event.data.action);
      }
    };

    return TransmissionHandler;

  })(EventHandler);

  jQuery(document).ready(function($) {
    var msg;
    msg = new TransmissionHandler;
    return setTimeout(function() {
      return msg.transmit('test', {
        a: 1,
        b: 2
      });
    }, 5000);
  });

}).call(this);
