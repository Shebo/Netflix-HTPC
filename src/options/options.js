// Generated by CoffeeScript 1.9.1
(function() {
  var alert, alertMsgs, capitalizeFirstLetter, clearInput, get, inputs, isEmpty, mapToKeyName, set, shortcuts, update, validate,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  shortcuts = {};

  alertMsgs = {
    success: "<strong>Yatta!</strong> Shortcuts saved successfully.",
    missing_shortcut: "<strong>Oh Snap, Linden!</strong> Looks like you didn't set all the needed shortcuts.",
    duplicate_shortcut: "<strong>Great Scott!</strong> Looks some of your shortcuts are duplicates."
  };

  inputs = [];

  capitalizeFirstLetter = function(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
  };

  isEmpty = function(variable) {
    return !(variable != null ? variable.length : void 0);
  };

  mapToKeyName = function(code) {
    var key, name;
    name = KeyboardJS.key.name(code);
    if ($.isArray(name)) {
      if (code === 91 || code === 92) {
        key = name[2];
      } else if ((code >= 48 && code <= 57) || (code >= 96 && code <= 111)) {
        key = name[name.length - 1];
      } else if ((code >= 186 && code <= 192) || (code >= 219 && code <= 222)) {
        key = name[name.length - 1];
      } else {
        key = name[0];
      }
    } else {
      key = name;
    }
    return key;
  };

  clearInput = function() {
    return $(this).closest('div').find('input').val('');
  };

  alert = function(type, msg) {
    var $alert;
    if (!msg) {
      msg = type;
    }
    $('.alert-wrapper').prepend("<div class='alert alert-" + type + " alert-dismissable fade in'><button type='button' class='close' aria-label='Close' data-dismiss='alert'><span aria-hidden='true'>&times;</span></button><span>" + alertMsgs[msg] + "</span></div>");
    $alert = $('.alert-wrapper').children().first();
    return setTimeout(function() {
      return $alert.alert('close');
    }, 5000);
  };

  update = function(event) {
    event.preventDefault();
    return setTimeout(function() {
      var k, key, keys, keysString, ref, v;
      keys = [];
      ref = KeyboardJS.activeKeys();
      for (k in ref) {
        v = ref[k];
        if (!(KeyboardJS.key.code(v))) {
          continue;
        }
        key = KeyboardJS.key.code(v);
        if (key.length && indexOf.call(keys, key) < 0) {
          keys.push(key);
        }
      }
      keys = keys.map(mapToKeyName);
      keysString = keys.join(' + ');
      return $(event.target).val(keysString);
    }, 0);
  };

  validate = function(event) {
    var i, input, len, val, values;
    event.preventDefault();
    values = [];
    for (i = 0, len = inputs.length; i < len; i++) {
      input = inputs[i];
      val = $(input).val();
      if (isEmpty(val)) {
        return alert('danger', 'missing_shortcut');
      } else if (indexOf.call(values, val) >= 0) {
        return alert('danger', 'duplicate_shortcut');
      }
      values.push(val);
    }
    return set();
  };

  set = function() {
    var i, input, len;
    $('#save').button('loading');
    for (i = 0, len = inputs.length; i < len; i++) {
      input = inputs[i];
      shortcuts[$(input).attr('name')] = $(input).val();
    }
    return chrome.storage.sync.set(shortcuts, function() {
      $('#save').button('reset');
      return alert('success');
    });
  };

  get = function() {
    var i, input, len;
    for (i = 0, len = inputs.length; i < len; i++) {
      input = inputs[i];
      shortcuts[$(input).attr('name')] = $(input).val();
    }
    return chrome.storage.sync.get(shortcuts, function(items) {
      var j, len1;
      for (j = 0, len1 = inputs.length; j < len1; j++) {
        input = inputs[j];
        $(input).val(items[$(input).attr('name')]);
      }
      return $('body').removeClass('loading');
    });
  };

  $(document).ready(function() {
    inputs = $("form#shortcuts input[type='text']");

    /*
    Init Components
     */
    get();
    $('[data-toggle="tooltip"]').tooltip();

    /*
    Register Event Handlers
     */
    $('ul li input').on('keydown', update);
    $('form#shortcuts').submit(validate);
    return $('.clear-input').click(clearInput);
  });

}).call(this);
